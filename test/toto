#include <windows.h>
#include <gdiplus.h>
#include <iostream>

using namespace Gdiplus;

// Function to initialize GDI+
void InitializeGDIPlus(GdiplusStartupInput& gdiplusStartupInput, ULONG_PTR& gdiplusToken) {
    GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);
}

// Function to cleanup GDI+
void CleanupGDIPlus(ULONG_PTR gdiplusToken) {
    GdiplusShutdown(gdiplusToken);
}

void DrawGradient(HDC hdc, int width, int height) {
    Graphics graphics(hdc);

    // Define the start and end points of the linear gradient
    PointF startPoint(0.0f, 0.0f);
    PointF endPoint(static_cast<REAL>(width), static_cast<REAL>(height));

    // Create color array for multiple stops
    Color color1(255, 255, 0, 0); // Red
    Color color2(255, 0, 255, 0); // Green
    Color color3(255, 0, 0, 255); // Blue
    Color color4(255, 255, 255, 0); // Yellow

    // Create the gradient brush for the first two colors
    LinearGradientBrush linearGradientBrush(startPoint, endPoint, color1, color2);

    // Use a Blend to define gradient stops
    Blend blend;
    blend.Count = 4; // Number of stops (4 colors)

    // Define the factors (intensity) and positions (location) for each stop
    blend.Factors = new REAL[4]{ 1.0f, 1.0f, 1.0f, 1.0f }; // Full intensity for each stop
    blend.Positions = new REAL[4]{ 0.0f, 0.33f, 0.66f, 1.0f }; // Color stops at 0%, 33%, 66%, and 100%

    // Set the blend to the brush
    linearGradientBrush.SetBlend(&blend);

    // Set the colors for each stop manually by manipulating the brush's gradient
    linearGradientBrush.SetInterpolationColors(new Color[4]{color1, color2, color3, color4}, 4);

    // Fill the rectangle with the gradient
    graphics.FillRectangle(&linearGradientBrush, 0, 0, width, height);

    // Cleanup blend arrays and colors
    delete[] blend.Factors;
    delete[] blend.Positions;
}

int main() {
    // Initialize GDI+
    GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;
    InitializeGDIPlus(gdiplusStartupInput, gdiplusToken);

    // Create a simple window for rendering
    HWND hwnd = CreateWindowEx(0, L"STATIC", L"GDI+ Linear Gradient Example", WS_OVERLAPPEDWINDOW,
                               CW_USEDEFAULT, CW_USEDEFAULT, 500, 500, NULL, NULL, NULL, NULL);
    ShowWindow(hwnd, SW_SHOWNORMAL);
    UpdateWindow(hwnd);

    // Get the device context (HDC) for the window
    HDC hdc = GetDC(hwnd);

    // Draw gradient on the window's device context
    DrawGradient(hdc, 500, 500);

    // Wait for user to close the window
    MessageBox(hwnd, L"Click OK to exit", L"Done", MB_OK);

    // Cleanup
    ReleaseDC(hwnd, hdc);
    CleanupGDIPlus(gdiplusToken);

    return 0;
}
